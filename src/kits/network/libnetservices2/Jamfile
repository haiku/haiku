SubDir HAIKU_TOP src kits network libnetservices2 ;

UsePrivateHeaders net ;
UsePrivateHeaders netservices2 ;
UsePrivateHeaders support ;
UsePrivateHeaders shared ;

local architectureObject ;
for architectureObject in [ MultiArchSubDirSetup ] {
	on $(architectureObject) {
		local architecture = $(TARGET_PACKAGING_ARCH) ;

		# Only build on modern GCC
		if $(TARGET_CC_IS_LEGACY_GCC_$(architecture)) = 1 {
			continue ;
		}

		local currentCxxFlags = $(C++FLAGS) ;
		# Remove any existing -std= flags
		local cleanCxxFlags ;
		local flag ;
		for flag in $(currentCxxFlags) {
			if ! [ Match "-std=*" : $(flag) ] {
				cleanCxxFlags += $(flag) ;
			}
		}

		# Explicitly set C++ standard per architecture for this kit
		if $(architecture) = sparc || $(architecture) = m68k {
			C++FLAGS on *.cpp = $(cleanCxxFlags) -std=gnu++14 ;
		} else {
			C++FLAGS on *.cpp = $(cleanCxxFlags) -std=gnu++17 ;
		}

		StaticLibrary <$(architecture)>libnetservices2.a :
			ErrorsExt.cpp
			HttpBuffer.cpp
			HttpFields.cpp
			HttpParser.cpp
			HttpRequest.cpp
			HttpResult.cpp
			HttpSerializer.cpp
			HttpSession.cpp
			HttpTime.cpp
			NetServicesMisc.cpp
			;

		LinkAgainst <$(architecture)>libnetservices.a :
			<$(architecture)>libshared.a ;

	}
}
